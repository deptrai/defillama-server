version: '3.8'

# Testing Infrastructure for Premium Features
# Port Allocation: 3100-3109 (Testing & Development)

services:
  # ============================================
  # Mock Servers (3100-3102)
  # ============================================
  
  telegram-mock:
    build:
      context: .
      dockerfile: Dockerfile.telegram-mock
    container_name: premium-telegram-mock
    ports:
      - "3100:3100"
    environment:
      - PORT=3100
      - NODE_ENV=test
    networks:
      - premium-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  discord-mock:
    build:
      context: .
      dockerfile: Dockerfile.discord-mock
    container_name: premium-discord-mock
    ports:
      - "3101:3101"
    environment:
      - PORT=3101
      - NODE_ENV=test
    networks:
      - premium-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3101/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  webhook-mock:
    build:
      context: .
      dockerfile: Dockerfile.webhook-mock
    container_name: premium-webhook-mock
    ports:
      - "3102:3102"
    environment:
      - PORT=3102
      - NODE_ENV=test
    networks:
      - premium-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3102/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # Email Testing (3103-3104)
  # ============================================
  
  mailhog:
    image: mailhog/mailhog:latest
    container_name: premium-mailhog
    ports:
      - "3103:1025"  # SMTP
      - "3104:8025"  # Web UI
    environment:
      - MH_STORAGE=maildir
      - MH_MAILDIR_PATH=/maildir
    volumes:
      - mailhog-data:/maildir
    networks:
      - premium-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # Test Database (3081)
  # ============================================
  
  postgres-test:
    image: postgres:14-alpine
    container_name: premium-postgres-test
    ports:
      - "3081:5432"
    environment:
      - POSTGRES_DB=premium_test
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test123
    volumes:
      - postgres-test-data:/var/lib/postgresql/data
      - ./scripts/init-test-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - premium-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # Test Redis (for caching in tests)
  # ============================================
  
  redis-test:
    image: redis:7-alpine
    container_name: premium-redis-test
    ports:
      - "3172:6379"  # Different port to avoid conflict with main Redis
    command: redis-server --appendonly no
    networks:
      - premium-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

# ============================================
# Networks
# ============================================

networks:
  premium-test-network:
    driver: bridge
    name: premium-test-network

# ============================================
# Volumes
# ============================================

volumes:
  postgres-test-data:
    name: premium-postgres-test-data
  mailhog-data:
    name: premium-mailhog-data

