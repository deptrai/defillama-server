# Docker Compose for SSL/TLS Configuration
# Let's Encrypt with Certbot for automatic certificate management

version: '3.8'

services:
  # Nginx reverse proxy with SSL/TLS termination
  nginx-ssl:
    image: nginx:1.25-alpine
    container_name: defillama-nginx-ssl
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl.conf:/etc/nginx/conf.d/ssl.conf:ro
      - ./nginx/security-headers.conf:/etc/nginx/conf.d/security-headers.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - nginx_cache:/var/cache/nginx
    networks:
      - defillama
    depends_on:
      - certbot
    environment:
      - DOMAIN=${DOMAIN:-defillama.local}
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot for Let's Encrypt certificate management
  certbot:
    image: certbot/certbot:v2.7.4
    container_name: defillama-certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot/logs:/var/log/letsencrypt
    networks:
      - defillama
    environment:
      - EMAIL=${CERTBOT_EMAIL:-admin@defillama.com}
      - DOMAIN=${DOMAIN:-defillama.local}
      - STAGING=${CERTBOT_STAGING:-0}
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  defillama:
    external: true

volumes:
  nginx_cache:

